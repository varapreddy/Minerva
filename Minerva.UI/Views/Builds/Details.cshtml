@using Minerva.UI.ViewModels
@model BuildViewModel

<h2>Test Runs for @Model.Name</h2>

<script src="~/lib/chart.js/dist/Chart.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>

<div id="summary" data-labels="@Model.GetLabelsAsArray()" data-passes="@Model.GetPassesAsArray()" data-fails="@Model.GetFailsAsArray()" data-skips="@Model.GetSkipsAsArray()">

</div>

<canvas id="results-line" height="300" width="800"></canvas>
<script type="text/javascript">
    $(document).ready(function () {

        var data = {
            labels: '@Model.GetLabelsAsArray()'.split(","),
            datasets: [
                {
                    label: "Passes",
                    fill: false,
                    tension: 0.07,
                    backgroundColor: "rgba(6,252,30,0.4)",
                    borderColor: "rgba(6,252,30,0.4)",
                    borderCapStyle: 'butt',
                    borderDash: [],
                    borderDashOffset: 0.0,
                    borderJoinStyle: 'miter',
                    pointBorderColor: "rgba(6,252,30,0.4)",
                    pointBackgroundColor: "#fff",
                    pointBorderWidth: 1,
                    pointHoverRadius: 5,
                    pointHoverBackgroundColor: "rgba(6,252,30,0.4)",
                    pointHoverBorderColor: "rgba(6,252,30,0.4)",
                    pointHoverBorderWidth: 2,
                    pointRadius: 1,
                    pointHitRadius: 10,

                    data: [ @Model.GetPassesAsArray() ]
                },
                {
                    label: "Fails",
                    fill: false,
                    tension: 0.07,
                    backgroundColor: "rgba(255,0,60,0.4)",
                    borderColor: "rgba(255,0,60,0.4)",
                    borderCapStyle: 'butt',
                    borderDash: [],
                    borderDashOffset: 0.0,
                    borderJoinStyle: 'miter',
                    pointBorderColor: "rgba(255,0,60,0.4)",
                    pointBackgroundColor: "#fff",
                    pointBorderWidth: 1,
                    pointHoverRadius: 5,
                    pointHoverBackgroundColor: "rgba(255,0,60,0.4)",
                    pointHoverBorderColor: "rgba(255,0,60,0.4)",
                    pointHoverBorderWidth: 2,
                    pointRadius: 1,
                    pointHitRadius: 10,

                    data: [ @Model.GetFailsAsArray() ]
                },
                {
                    label: "Skips",
                    fill: false,
                    tension: 0.07,
                    backgroundColor: "rgba(239,247,0,0.4)",
                    borderColor: "rgba(239,247,0,0.4)",
                    borderCapStyle: 'butt',
                    borderDash: [],
                    borderDashOffset: 0.0,
                    borderJoinStyle: 'miter',
                    pointBorderColor: "rgba(239,247,0,0.4)",
                    pointBackgroundColor: "#fff",
                    pointBorderWidth: 1,
                    pointHoverRadius: 5,
                    pointHoverBackgroundColor: "rgba(239,247,0,0.4)",
                    pointHoverBorderColor: "rgba(239,247,0,0.4)",
                    pointHoverBorderWidth: 2,
                    pointRadius: 1,
                    pointHitRadius: 10,

                    data: [ @Model.GetSkipsAsArray() ]
                }
            ]
        };
        var ctx = $("#results-line").get(0).getContext("2d");
        var myDoughnut = Chart.Line(ctx, { data: data });
    });

</script>

<table class="table table-striped table-bordered table-condensed">
    <thead>
        <tr>
            <th>Test Run ID</th>
            <th>Date Executed</th>
            <th>Passes</th>
            <th>Fails</th>
            <th>Skips</th>
            <th>Total Execution Time</th>
        </tr>
    </thead>
    @foreach (var test in Model.TestRuns)
    {
        <tr>
            <td><a asp-controller="TestRuns" asp-action="Details" asp-route-id="@test.Id">@test.Id</a></td>
            <td>@test.RunAt</td>
            <td>@test.Passes</td>
            <td>@test.Fails</td>
            <td>@test.Skips</td>
            <td>@test.GetHumanRunTime()</td>
        </tr>
    }

</table>



